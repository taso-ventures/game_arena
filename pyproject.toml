[project]
# Project metadata. Available keys are documented at:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata
name = "game_arena"
description = ""
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [{name = "game_arena authors", email="game_arena@google.com"}]
classifiers = [  # List of https://pypi.org/classifiers/
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
]
keywords = []

# pip dependencies of the project
# Installed locally with `pip install -e .`
dependencies = [
  # keep-sorted start
  "aiohttp",
  "anthropic",
  "chess",
  "dataclasses-json",
  "google-genai",
  "immutabledict",
  "open_spiel",
  "openai",
  "requests",
  "tenacity",
  # keep-sorted end
]

# `version` is automatically set by flit to use `game_arena.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/google-deepmind/game_arena"
repository = "https://github.com/google-deepmind/game_arena"
changelog = "https://github.com/google-deepmind/game_arena/blob/main/CHANGELOG.md"
# documentation = ""

[project.optional-dependencies]
# Development deps (unittest, linting, formating,...)
# Installed through `pip install -e .[dev]`
dev = [
  # For demo scripts and testing:
  "absl-py",
  "termcolor",
  # Development:
  "pylint>=2.6.0",
  "pyink",
]

[tool.pyink]
# Formatting configuration to follow Google style-guide
line-length = 80
unstable = true
pyink-indentation = 2
pyink-use-majority-quotes = true

[build-system]
# Build system specify which backend is used to build/install the project (flit,
# poetry, setuptools,...). All backends are supported by `pip install`
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
]
